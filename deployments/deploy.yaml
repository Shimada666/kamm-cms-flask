apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  name: flask-simple-book-cms
  namespace: wb
  labels:
    app.kubernetes.io/version: v1
    app.kubernetes.io/name: flask-simple-book-cms
  annotations:
    servicemesh.kubesphere.io/enabled: 'false'
    kubesphere.io/description: flask-simple-book-cms
spec:
  selector:
    matchLabels:
      app.kubernetes.io/version: v1
      app.kubernetes.io/name: flask-simple-book-cms
  addOwnerRef: true
  componentKinds:
    - group: ''
      kind: Service
    - group: apps
      kind: Deployment
    - group: apps
      kind: StatefulSet
    - group: networking.k8s.io
      kind: Ingress
    - group: servicemesh.kubesphere.io
      kind: Strategy
    - group: servicemesh.kubesphere.io
      kind: ServicePolicy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  # 部署名字
  name: flask-simple-book-cms
  namespace: wb
  labels:
    version: v1
    app: flask-simple-book-cms
    app.kubernetes.io/version: v1
    app.kubernetes.io/name: flask-simple-book-cms
  # 部署名字
  annotations:
    servicemesh.kubesphere.io/enabled: 'false'
spec:
  replicas: 1
  # 用来查找关联的 Pod，所有标签都匹配才行
  selector:
    matchLabels:
      version: v1
      app: flask-simple-book-cms
      app.kubernetes.io/version: v1
      app.kubernetes.io/name: flask-simple-book-cms
  template:
    metadata:
      labels:
        version: v1
        app: flask-simple-book-cms
        app.kubernetes.io/version: v1
        app.kubernetes.io/name: flask-simple-book-cms
      annotations:
        sidecar.istio.io/inject: 'false'
    spec:
      imagePullSecrets:
        - name: txcloud-docker-registry  # 提前在项目下配置访问腾讯云的账号密码
      # 定义容器，可以多个
      containers:
        - name: flask-simple-book-cms # 容器名字
          # 如 ccr.ccs.tencentyun.com/corgi_project/ks-test:latest
          # image: $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BRANCH_NAME-$GIT_COMMIT # 配合 jenkins 使用的镜像
          image: $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BRANCH_NAME-$GIT_COMMIT
          imagePullPolicy: IfNotPresent
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
---
apiVersion: v1
kind: Service
metadata:
  namespace: wb
  labels:
    version: v1
    app: flask-simple-book-cms
    app.kubernetes.io/version: v1
    app.kubernetes.io/name: flask-simple-book-cms
  annotations:
    kubesphere.io/serviceType: statelessservice
    kubesphere.io/description: flask-simple-book-cms
    kubesphere.io/alias-name: flask-simple-book-cms
    servicemesh.kubesphere.io/enabled: 'false'
  name: flask-simple-book-cms
spec:
  sessionAffinity: None
  selector:
    app: flask-simple-book-cms
    app.kubernetes.io/version: v1
    app.kubernetes.io/name: flask-simple-book-cms
  ports:
    - name: http-80
      protocol: TCP
      targetPort: 80
      port: 80
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: flask-simple-book-cms
  namespace: wb
  labels:
    app.kubernetes.io/version: v1
    app.kubernetes.io/name: flask-simple-book-cms
spec:
  rules:
    - host: flask-simple-book-cms.app.corgi.plus
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: flask-simple-book-cms
                port:
                  number: 80
